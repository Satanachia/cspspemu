<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABgRDgAZExAAGhUSABoVFAAeFxQAHhgVACEXEwAhFxQAJRcWACEZ
        FgAlGhgAIxwZACYdGgAmHhwAKBsZACodGwApHhwAKiAdAC4hHwAwIh8AKyIhAC0iIAAtJCEAMCMhADEk
        IgAyJSQANiclADctIgAxKCUANSglADUsJgA0KygANSwqADgrKQA5LSoAOS0sAD0uLAA+MS8APTIwAD00
        MQBAMjEAQTUyAEE2NABENjUAQjk2AEU4NgBFOjgARjw5AEg6OABJPTsASj48AEw+PQBNQD4AUEE/AE5B
        QABQQkEAUURCAFREQwBTRkQAVEZEAFVIRgBYSEYAVkpIAFRNTwBYS0kAWUxKAFtOTABcT00AXVBOAF9S
        UABgU1EAYVRSAGNWVABkV1QAZFhVAGhbWABrX1wAa2dmAG5mZgBtaGcAbWprAHNoaABxbGwAeW9vAHFv
        cQBzcXQAdnV2AH90dQB3dXgAeHV4AHp4egB+fH4AhHh3AIZ4eACKfn0Ai4B/AIKAgQCHgYIAjYKBAI6E
        ggCLgoQAi4SFAI+FhACQhYQAmpWWAKKbmwCjnJwAo6KiAKikpACtpaUArqinALCtrQC0sK4At7GwALq0
        tAC+uroA0M3NANXS0gD39vcA+Pb3APf4+AD8+vsA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBB
        AABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8U
        AABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x
        5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR
        /wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx
        /wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR
        /wCMcf8AppH/AL+x/wDa0f8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAdFFTTlBTU1FVVllXWVpbW1tcXGFhAAAAAAAAAABya2okEBsICxIQBwgoKCEo
        EgwKBRILEQ0VaWwAAAAAABAPEBgaKzIxLiwrKisoJyckICAgHR0XCgUDAwEAAABPJS0nExM/SUZFQ0I/
        PDk3NzQyMC0tKygGBAYOFUAAADEqJiMUEz1IRURCQT07OTc1MzAvLSsrJwoDCgsfHAAAKisuIxQTP0hF
        RENBPzw5ODU0MC8tKysnCgMOIRYLcHAxJkI0ERQ/SUZFREI/PDk4NzQzMC8tKygGAhUoEg5mcTQmHis+
        Gj9JR0VEQkE/PDk4NTMwLy0rKA4nDg4jKWJ1OjceGzIaQUpIRkRDQT88Ozg3NDIwLS0oESMODiMjbQBF
        ODEmGBpCSkhGRURCPz07OTc1MzAvLSoMBRcwGRMAAF05NC4iGkJLSEdFREJBPz05ODc0MjAtKw4FEiMZ
        MwAAdk1CIyIaQ0xKSUdFREI/Pzs5NzUyMC8rEiMiFAlwAAAAbmNSJxs2Pjw6Ojg3NTQyMTEuLCopKSUZ
        L1RYZQAAAAAAeHpzXmNnZ2hoYF9gZGRkZ2RjaGhoY11vd3kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////////////////////
        ///4AAA/wAAAB8AAAAOAAAABgAAAAYAAAAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAHAAAAD4AAAB///
        /////////////////////////////////////////////ygAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP359RHj3t1h0cvNZ5mTk6JCPT3CSUJCw0E8
        O8ZDPTzGR0JBxUdBQMRBPj/EREFEwUZDR8BKSEu/SUdJv0hGSL1JRkm9TUtMvUxKS71LSUy8UU5Pu1BN
        UbtUUFK5VFFRuI6Ki10AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD18fEDlo6Mrn1zcrNoXl6dMyYm9ise
        G/82JyX/IhcU/yYaGP8rIB3/KR0b/yEXE/8gFxX/PDQy/zwzMv81LCv/PTQz/ykhHv8jGxf/IRkV/x8X
        FP8rIB3/JBkY/ykfHv8nHBr/LCEi/mJaXKNbWViOgX9+fOro6AgAAAAAAAAAAK2oqGYpHRv/KBsZ/yse
        G/8wIyH/MiUj/0M2NP9KPTv/SDs5/0U4Nv9ENzX/QzY0/0A1Mv9ANjP/PjMx/z0zMP89MzD/OS4s/zUr
        KP80Kyj/Myon/zEoJf8xKCT/LiQh/yAZFv8eFxb/GRQT/xsVEv8YEQ7/lZSUdwAAAADh3+AKWE5O3D0v
        LP9DOTb/PjMw/y4hH/8uIR//V0pI/2NWVP9fUlD/XVBO/1tOTP9ZTEr/V0pI/1RHRf9SRUP/T0JA/05B
        P/9MPz3/Rz47/0U8Of9DOjf/Qjk2/0E4Nf89NDH/HhgW/xoVFP8eGRb/JR4c/ysiIf9COjzm6OjpELGt
        rkRHOjr/QzUz/z4yL/86LSv/LyIg/y4hH/9VSEb/YVRS/15RT/9cT03/Wk1L/1hLSf9VSEb/U0ZE/1FE
        Qv9PQkD/TUA+/0o+PP9GPTr/RDs4/0I5Nv9BODX/QDc0/zwzMP8hGRb/GxYT/x8ZFv8lGxr/NSwm/zct
        Iv+knJxXlpCRfUEzMv9DNjP/RTg2/zksKv8vIiD/LiEf/1dKSP9iVVP/XlFP/1xPTf9bTkz/WEtJ/1ZJ
        R/9UR0X/UkVD/1BDQf9OQD//Sz89/0c9Ov9FOzj/Qzo3/0E4Nf9ANzT/PDMw/yEZFv8bFhP/JB4b/zUs
        Kf8sIyD/JRsY/3dzcpF+eHaaSDo4/z4xL/9ZTEr/Sz89/yseHP8vIiD/V0pI/2NWVP9fUlD/XVBO/1xP
        Tf9ZTEr/V0pI/1RHRf9SRUP/UENB/09CQP9MPz3/Sj48/0Y8Of9EOzj/Qjk2/0E4Nf89NDH/HxgV/xkT
        EP8rIh//PTQx/ykgHf8nHhv/VUxNroaAfZ1MPzz/PzEv/zQoJf9BNTT/V0lG/zElJP9XSkj/Y1ZU/2BT
        Uf9eUU//XE9N/1pNS/9YS0n/VklH/1RHRf9SRUP/UENB/05AP/9LPjz/Rz06/0Q7OP9DOjf/QTg1/z00
        Mf8nHhv/PjIw/ycfHP8nHhv/Ny4r/z8zMf9TSkuxpaGghVNFQ/9PQkD/NCgm/zYpJ/9KPTv/MyYm/1hM
        Sf9kWFT/YVRS/19SUP9cT03/W05M/1hLSf9XSkj/VEdF/1NGRP9QQ0H/TkE//0w/Pf9HPjv/RTw5/0M6
        N/9COTb/PTQx/ygfHP84Liv/Jx4b/yceG/86Liv/OSwq/25oaJnGwMFQXlFP/1FDQf9IOzn/PjEv/zAk
        If8yJSP/WUxK/2RXVf9hVFL/X1JQ/15RT/9cT03/Wk1L/1dKSP9VSEb/U0ZE/1FEQv9PQkD/TUA+/0o+
        PP9GPTr/RDs4/0M6N/8/NTL/IxwZ/xwXFP8tJCH/Rzs5/zEkIv8uIR//nJmZZeTd3xF5bGvpUUVC/0s/
        Pf9FNzb/OCsp/zMmJP9aTUv/ZVlW/2JVU/9gU1H/XlFP/1xPTf9aTUv/WEtJ/1ZJR/9VSEb/UkVD/1BD
        Qf9OQT//TD88/0c9O/9EPDn/Qzo3/z82M/8mHhv/HxcV/ykgHf86LSv/MiQi/0M3NvXU0tIeAAAAAK+o
        qINrX1z/WExK/zotK/84Kyn/MyYk/1tOTP9oW1j/ZFdU/2NVU/9hU1H/XlFP/1xPTf9ZTUv/VktI/1VK
        R/9TR0T/UEVC/05DQP9MQT7/SD87/0Y9Ov9FOzj/PzYz/yohHv85Lyv/OCwo/zAiH/8lFxb/fHd3mQAA
        AAAAAAAA4+PjD5yTk9ONg4L/c2ho/z8yMP82KCX/UEE//1hIRv9WRkX/VURE/1REQ/9RQkH/T0BA/04/
        P/9NPT3/Szw7/0k6Of9IOTj/Rzg3/0Q1NP9DNDP/QTIx/0AxMP89LS3/MiQj/0Y5Of95b2//f3R1/3lv
        cdzV0dIXAAAAAAAAAAAAAAAA8fHxIvb09bv8+vvhsqur4nZnZ+F9cW/fgHRy34B0c9+BdHPfgXRz3YF1
        dOqCdXTwgnV07IBzct9+cnDefnJx339zct5/c3HffnJx4IBzct6BdHPdgXVz3n1xcN50Z2Xgo5yb4Pb1
        9uL19vbA8vLyKgAAAAAAAAAAAAAAAAAAAAAAAAAA6OfnLuvs7Fjd2txZtK2vWb25uVbDwcBUwb++VcLA
        vlTGwsFSx8TDZsvHxm/LyMdqw8HAVcK/vlTCv75Uw8HAVMG/vlXBvr1WyMXEU8nHxVLJxsVTw8G/U7ay
        sVfc2NhX6urqWejo6DIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////////////
        ////////wAAAH4AAAAGAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH//////////////////////////////////////////8=
</value>
  </data>
</root>